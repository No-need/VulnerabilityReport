namespace VulnerabilityReport.Helper
{
    public class Extension
    {
    }

    public static class ListExtensions
    {
        public static void RemoveRight<T>(this List<T> list, T value)
        {
            int index = list.IndexOf(value);

            if (index != -1 && index < list.Count - 1)
            {
                int elementsToRemove = list.Count - index - 1;
                list.RemoveRange(index + 1, elementsToRemove);
            }
        }

        public static void RemoveLeft<T>(this List<T> list, T value)
        {
            int index = list.IndexOf(value);

            if (index != -1 && index > 0)
            {
                list.RemoveRange(0, index);
            }
        }

        public static void RemoveRightAt<T>(this List<T> list, int index)
        {
            if (index != -1 && index < list.Count - 1)
            {
                int elementsToRemove = list.Count - index - 1;
                list.RemoveRange(index + 1, elementsToRemove);
            }
        }

        public static void RemoveLeftAt<T>(this List<T> list, int index)
        {
            if (index != -1 && index > 0)
            {
                list.RemoveRange(0, index);
            }
        }
    }
}
